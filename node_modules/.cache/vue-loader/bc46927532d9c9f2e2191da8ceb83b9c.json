{"remainingRequest":"/Users/fuheyong/.config/yarn/global/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuheyong/Desktop/zhufeng/component/components/father.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuheyong/Desktop/zhufeng/component/components/father.vue","mtime":1615718038962},{"path":"/Users/fuheyong/.config/yarn/global/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1611488807737},{"path":"/Users/fuheyong/.config/yarn/global/node_modules/cache-loader/dist/cjs.js","mtime":1594523039079},{"path":"/Users/fuheyong/.config/yarn/global/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1611488831891}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIHNvbjHniLblrZDkvKDpgJIKLy8gaW1wb3J0IHNvbjEgZnJvbSAnLi9zb24xJwoKLy8gc29uMueItuWtkOWtmeS8oOmAkgppbXBvcnQgc29uMiBmcm9tICcuL3NvbjInCgovLyBhdHRyc+WSjGxpc3RlbmVycwppbXBvcnQgbGlzdGVuZXJzIGZyb20gJy4vbGlzdGVuZXJzJwoKLy8gcmVmCmltcG9ydCByZWYgZnJvbSAnLi9yZWYnCgovLyBldmVudEJ1cwppbXBvcnQgZXZlbnRCdXMgZnJvbSAnLi9ldmVudEJ1cycKCmV4cG9ydCBkZWZhdWx0IHsKICAvLyAxLueItuWDj+WtmeWtkOS8oOWAvO+8jOWPr+S7pemAmui/h3Byb3ZpZGVo5ZKMaW5qZWN05pa55byPCiAgcHJvdmlkZSAoKSB7IC8v5o+Q5L6b6ICF77yM5bCG6Ieq5bex55qEZGF0YeaatOmcsuWHuuWOuwogICAgcmV0dXJuIHsgcGFyZW50OiB0aGlzIH0KICB9LAogIC8vIDIu6YCa6L+HJHBhcmVudO+8iOeItue7hOS7tu+8ieWSjCRjaGlsZHJlbijlrZDnu4Tku7YpCiAgY29tcG9uZW50czogewogICAgLy8gc29uMSwKICAgIHNvbjIsCiAgICBsaXN0ZW5lcnMsCiAgICByZWYsCiAgICBldmVudEJ1cwogIH0sCiAgbmFtZTogImZhdGhlciIsCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICBudW06IDEwLAogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgY2hhbmdlTnVtIChkYXRhKSB7CiAgICAgIHRoaXMubnVtID0gZGF0YQogICAgfSwKICAgIGVhdCAoZGF0YSkgewogICAgICBjb25zb2xlLmxvZygn5ZCD6aWt77yM552h6KeJ77yM5omT6LGG6LGGJywgZGF0YSkKICAgIH0sCiAgICBmbkxpc3RlbmVycyAoZGF0YSkgewogICAgICBjb25zb2xlLmxvZygnZm5MaXN0ZW5lcnMnLCBkYXRhKQogICAgfSwKICAgIGRpYWdsb2cgKCkgewogICAgICB0aGlzLiRyZWZzLmRpYWdsb2cuY2hhbmdlKCkKICAgIH0sCiAgICBldmVudEJ1cyAoKSB7CiAgICAgIHRoaXMuJGV2ZW50QnVzLiRlbWl0KCfoh6rlrprkuYnnmoTml7bpl7TlkI3np7AnLCB7IG5hbWU6ICLlsI/mmI4iLCBhZ2U6IDEwIH0pCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["father.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"father.vue","sourceRoot":"components","sourcesContent":["\n<template>\n  <div>\n    <p>father:{{num}}</p>\n    <!-- 第一种,传入函数 -->\n    <!-- <son1 :num='num'\n          :changeNum='changeNum'></son1> -->\n    <!-- 第二种，自定义函数 -->\n    <!-- <son1 :num='num'\n          @changeNum='changeNum'></son1> -->\n    <!-- 第三种，v-model-->\n    <!-- <son1 v-model=\"num\"></son1> -->\n    <!-- 第四种，.sync和update的语法糖 -->\n    <!-- <son1 :num.sync=\"num\"></son1> -->\n\n    <son2 @eat='eat'></son2>\n    <button @click=\"$broadcast('fn','sun','123')\">祖先组件调用孙子组件的</button>\n    <!-- listeners和attrs方式 -->\n    <listeners a=1\n               b=2\n               c=3\n               @click=\"fnListeners\"></listeners>\n\n    <!--ref的方式 -->\n    <ref ref=\"diaglog\"></ref>\n    <button @click=\"diaglog\">ref的方式</button>\n\n    <!-- eventBus -->\n    <eventBus></eventBus>\n    <button @click=\"eventBus\">eventBus</button>\n  </div>\n</template>\n<script>\n// son1父子传递\n// import son1 from './son1'\n\n// son2父子孙传递\nimport son2 from './son2'\n\n// attrs和listeners\nimport listeners from './listeners'\n\n// ref\nimport ref from './ref'\n\n// eventBus\nimport eventBus from './eventBus'\n\nexport default {\n  // 1.父像孙子传值，可以通过provideh和inject方式\n  provide () { //提供者，将自己的data暴露出去\n    return { parent: this }\n  },\n  // 2.通过$parent（父组件）和$children(子组件)\n  components: {\n    // son1,\n    son2,\n    listeners,\n    ref,\n    eventBus\n  },\n  name: \"father\",\n  data () {\n    return {\n      num: 10,\n    }\n  },\n  methods: {\n    changeNum (data) {\n      this.num = data\n    },\n    eat (data) {\n      console.log('吃饭，睡觉，打豆豆', data)\n    },\n    fnListeners (data) {\n      console.log('fnListeners', data)\n    },\n    diaglog () {\n      this.$refs.diaglog.change()\n    },\n    eventBus () {\n      this.$eventBus.$emit('自定义的时间名称', { name: \"小明\", age: 10 })\n    }\n  }\n}\n</script>\n\n"]}]}